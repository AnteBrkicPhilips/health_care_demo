plugins {
    id 'java'
    id "application"
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    mavenCentral()
    flatDir {
        dirs 'lib'
    }
}

dependencies {

    implementation 'com.oracle.database.jdbc:ojdbc8:21.9.0.0'
    implementation 'p6spy:p6spy:3.9.1'
//    implementation ':otlp-extension:'
    implementation 'io.opentelemetry:opentelemetry-api:1.32.0'
    implementation 'io.opentelemetry:opentelemetry-sdk:1.32.0'
    implementation 'io.opentelemetry.instrumentation:opentelemetry-instrumentation-annotations:1.32.0'
    implementation 'com.zaxxer:HikariCP:4.0.3'

    implementation("org.apache.logging.log4j:log4j-core:2.24.3")
    implementation("org.apache.logging.log4j:log4j-slf4j2-impl:2.24.3")

    runtimeOnly 'io.opentelemetry.javaagent:opentelemetry-javaagent:1.32.0'
    runtimeOnly 'io.micrometer:micrometer-core:1.10.5'

    testImplementation 'com.h2database:h2:1.4.200'
    testImplementation 'org.hamcrest:hamcrest-core:1.3'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.1'
    testImplementation 'org.testcontainers:junit-jupiter:1.20.0'
    testImplementation 'org.testcontainers:testcontainers:1.20.0'
    testImplementation 'org.testcontainers:oracle-free:1.20.0'
}

def libDir = file("build/lib")

task copyDependenciesToLib(type: Copy) {
    from configurations.testRuntimeClasspath
    into libDir
}
build.finalizedBy "copyDependenciesToLib"

ant.importBuild("./build.xml"){antTargetName ->
    "ant-" + antTargetName
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
}

def reportsDir = file("build/test-reports")
test.reports.junitXml.destination = reportsDir

tasks.named('test') {
    useJUnitPlatform {
        filter {
            excludeTags "integration"
        }
    }
}

def integrationTest = tasks.register("integrationTest", Test) {
    useJUnitPlatform {
        filter {
            includeTags 'integration'
        }
    }
}
